{
  "name": "drag-and-drop-files",
  "version": "0.0.1",
  "description": "Handle file drag and drop events without all the Yak shaving",
  "main": "ondrop.js",
  "directories": {
    "example": "example"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/drag-and-drop-files.git"
  },
  "keywords": [
    "file",
    "drag",
    "drop",
    "event",
    "data",
    "transfer",
    "html5"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "46f333643f2e3a4ec4cf2b87db8c05214ab682aa",
  "bugs": {
    "url": "https://github.com/mikolalysenko/drag-and-drop-files/issues"
  },
  "readme": "drag-and-drop-files\n===================\nHandle [file drag and drop events](https://developer.mozilla.org/en-US/docs/Using_files_from_web_applications) in an HTML5 capable browser with less Yak shaving.\n\n## Example\n\n```javascript\nvar dropTarget = document.querySelector(\"#dropTarget\")\n\nrequire(\"drag-and-drop-files\")(dropTarget, function(files) {\n  console.log(\"Got some files:\", files)\n})\n```\n\n## Install\n\n    npm install drag-and-drop-files\n\n### `require(\"drag-and-drop-files\")(element, callback(files) )`\nHooks a listener for a file data transfer event.\n\n* `element` is the DOM element to listen for file events on\n* `callback(files)` is a callback that gets fired when the files are dropped on to it.  The argument `files` is an array of all the file objects that were dragged onto the element.\n\n\n## Credits\n(c) 2013 Mikola Lysenko. MIT License\n",
  "homepage": "https://github.com/mikolalysenko/drag-and-drop-files",
  "_id": "drag-and-drop-files@0.0.1",
  "_from": "drag-and-drop-files@"
}
